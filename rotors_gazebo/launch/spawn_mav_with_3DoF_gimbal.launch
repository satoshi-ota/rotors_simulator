<?xml version="1.0"?>

<launch>
  <arg name="mav_name" default="firefly"/>
  <arg name="namespace" default="$(arg mav_name)"/>
  <arg name="model" default="$(find rotors_description)/urdf/$(arg mav_name)_base.xacro"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="$(arg mav_name)"/>
  <arg name="wait_to_record_bag" default="false"/>
  <arg name="enable_mavlink_interface" default="false"/>
  <arg name="1DoF_gimbal" default="false"/>
  <arg name="3DoF_gimbal" default="true"/>


  <!-- send the robot XML to param server -->
  <param name="robot_description" command="
    $(find xacro)/xacro '$(arg model)'
    enable_logging:=$(arg enable_logging)
    enable_ground_truth:=$(arg enable_ground_truth)
    enable_mavlink_interface:=$(arg enable_mavlink_interface)
    log_file:=$(arg log_file)
    wait_to_record_bag:=$(arg wait_to_record_bag)
    mav_name:=$(arg mav_name)
    namespace:=$(arg namespace)
    1DoF_gimbal:=$(arg 1DoF_gimbal)
    3DoF_gimbal:=$(arg 3DoF_gimbal)"
  />
  <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_$(arg namespace)" pkg="gazebo_ros" type="spawn_model"
   args="-param robot_description
         -urdf
         -x $(arg x)
         -y $(arg y)
         -z $(arg z)
         -model $(arg namespace)"
   respawn="false" output="screen">
  </node>

  <rosparam>
    gimbal_joint_position_controller_pitch:
      type: effort_controllers/JointPositionController
      joint: firefly/gimbal_joint_pitch
      pid: {p: 0.6, i: 0.01, d: 0.01}

    gimbal_joint_position_controller_yaw:
      type: effort_controllers/JointPositionController
      joint: firefly/gimbal_joint_yaw
      pid: {p: 0.6, i: 0.01, d: 0.01}
  </rosparam>


  <node name="controller_spawner" pkg="controller_manager"
          type="spawner" respawn="false"
          output="screen" ns="/firefly"
          args="gimbal_joint_position_controller_pitch
                gimbal_joint_position_controller_yaw"/>
</launch>
